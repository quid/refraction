// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a Button with small size 1`] = `
.emotion-0 {
  border: 0;
  padding: 0;
  background: none;
  cursor: pointer;
  font-size: inherit;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  box-sizing: border-box;
  color: inherit;
  font-family: IBM Plex Sans,Lucida Grande,Tahoma,Verdana,Arial,sans-serif;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-weight: bold;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  vertical-align: top;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2px;
  height: 24px;
  padding-left: 0.769em;
  padding-right: 0.769em;
  -webkit-transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  color: #121212;
  border: 1px solid transparent;
  background-color: #C7CCD1;
}

.emotion-0:hover,
.emotion-0[data-state*='hover'] {
  background-color: hsl(210,9.8%,72%);
}

.emotion-0:active,
.emotion-0[data-state*='active'] {
  background-color: hsl(210,9.8%,64%);
}

.emotion-0:disabled,
.emotion-0:disabled:hover,
.emotion-0:disabled:focus,
.emotion-0:disabled:active {
  background-color: rgba(199,204,209,0.4);
}

.emotion-0:focus:not(:focus-visible) {
  outline: 0;
}

.emotion-0:focus-visible,
.emotion-0[data-state*='focus'] {
  outline: 0;
  box-shadow: 0 0 0 0.5px #FFFFFF,0 0 2px 2px #C7CCD1;
}

.emotion-0:disabled {
  cursor: default;
}

.emotion-0 .e1t5eso00 {
  display: block;
  line-height: 1;
  font-size: 1em;
  margin: 5px -6px;
}

<Button
  importance="secondary"
  size="small"
  type="button"
>
  <ForwardRef
    className="emotion-0 emotion-1"
    importance="secondary"
    size="small"
    type="button"
  >
    <button
      className="emotion-0 emotion-1"
      onClick={[Function]}
      type="button"
    >
      <span
        key=".0"
      >
        Hello, World!
      </span>
    </button>
  </ForwardRef>
</Button>
`;

exports[`renders a disabled and transparent Button 1`] = `
.emotion-0 {
  border: 0;
  padding: 0;
  background: none;
  cursor: pointer;
  font-size: inherit;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  box-sizing: border-box;
  color: inherit;
  font-family: IBM Plex Sans,Lucida Grande,Tahoma,Verdana,Arial,sans-serif;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-weight: bold;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  vertical-align: top;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2px;
  height: 32px;
  padding-left: 0.769em;
  padding-right: 0.769em;
  -webkit-transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  color: #121212;
  border: 1px solid transparent;
  background-color: #C7CCD1;
  background-color: transparent;
}

.emotion-0:hover,
.emotion-0[data-state*='hover'] {
  background-color: hsl(210,9.8%,72%);
}

.emotion-0:active,
.emotion-0[data-state*='active'] {
  background-color: hsl(210,9.8%,64%);
}

.emotion-0,
.emotion-0:hover,
.emotion-0:focus,
.emotion-0:active {
  background-color: rgba(199,204,209,0.4);
}

.emotion-0:focus:not(:focus-visible) {
  outline: 0;
}

.emotion-0:focus-visible,
.emotion-0[data-state*='focus'] {
  outline: 0;
  box-shadow: 0 0 0 0.5px #FFFFFF,0 0 2px 2px #C7CCD1;
}

.emotion-0 {
  cursor: default;
}

.emotion-0 .e1t5eso00 {
  display: block;
  line-height: 1;
  font-size: 1.42em;
  margin: 5px -6px;
}

<Button
  disabled={true}
  importance="secondary"
  size="regular"
  transparent={true}
  type="button"
>
  <ForwardRef
    className="emotion-0 emotion-1"
    disabled={true}
    importance="secondary"
    size="regular"
    transparent={true}
    type="button"
  >
    <button
      className="emotion-0 emotion-1"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <span
        key=".0"
      >
        Hello, World!
      </span>
    </button>
  </ForwardRef>
</Button>
`;

exports[`renders the expected markup 1`] = `
.emotion-0 {
  border: 0;
  padding: 0;
  background: none;
  cursor: pointer;
  font-size: inherit;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  box-sizing: border-box;
  color: inherit;
  font-family: IBM Plex Sans,Lucida Grande,Tahoma,Verdana,Arial,sans-serif;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-size: 14px;
  line-height: 1.57;
  color: #2E3338;
  font-weight: bold;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  vertical-align: top;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 2px;
  height: 32px;
  padding-left: 0.769em;
  padding-right: 0.769em;
  -webkit-transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  transition: padding 0.2s ease-in-out,background 0.2s ease-in-out;
  color: #121212;
  border: 1px solid transparent;
  background-color: #C7CCD1;
}

.emotion-0:hover,
.emotion-0[data-state*='hover'] {
  background-color: hsl(210,9.8%,72%);
}

.emotion-0:active,
.emotion-0[data-state*='active'] {
  background-color: hsl(210,9.8%,64%);
}

.emotion-0:disabled,
.emotion-0:disabled:hover,
.emotion-0:disabled:focus,
.emotion-0:disabled:active {
  background-color: rgba(199,204,209,0.4);
}

.emotion-0:focus:not(:focus-visible) {
  outline: 0;
}

.emotion-0:focus-visible,
.emotion-0[data-state*='focus'] {
  outline: 0;
  box-shadow: 0 0 0 0.5px #FFFFFF,0 0 2px 2px #C7CCD1;
}

.emotion-0:disabled {
  cursor: default;
}

.emotion-0 .e1t5eso00 {
  display: block;
  line-height: 1;
  font-size: 1.42em;
  margin: 5px -6px;
}

<Button
  data-action="foo"
  importance="secondary"
  size="regular"
  type="button"
>
  <ForwardRef
    className="emotion-0 emotion-1"
    data-action="foo"
    importance="secondary"
    size="regular"
    type="button"
  >
    <button
      className="emotion-0 emotion-1"
      data-action="foo"
      onClick={[Function]}
      type="button"
    >
      <span
        key=".0"
      >
        Hello, World!
      </span>
    </button>
  </ForwardRef>
</Button>
`;
