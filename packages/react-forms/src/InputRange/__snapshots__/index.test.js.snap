// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a Track component 1`] = `
.emotion-0 {
  position: relative;
  top: 50%;
  background-position: center;
  background-size: 100% 2px;
  background-repeat: no-repeat;
  height: 2px;
  border-radius: 2px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.emotion-0::before {
  content: '';
  position: absolute;
  height: 6px;
  width: 100%;
  -webkit-transform: translateY(-25%);
  -ms-transform: translateY(-25%);
  transform: translateY(-25%);
}

<Track>
  <div
    className="emotion-0 emotion-1"
  />
</Track>
`;

exports[`renders a Track component 2`] = `
.emotion-0 {
  position: relative;
  top: 50%;
  background-position: center;
  background-size: 100% 2px;
  background-repeat: no-repeat;
  height: 2px;
  border-radius: 2px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.emotion-0::before {
  content: '';
  position: absolute;
  height: 4px;
  width: 100%;
  -webkit-transform: translateY(-25%);
  -ms-transform: translateY(-25%);
  transform: translateY(-25%);
}

<Track
  disabled={true}
>
  <div
    className="emotion-0 emotion-1"
    disabled={true}
  />
</Track>
`;

exports[`renders an InputRange 1`] = `
@keyframes animation-0 {
  from {
    box-shadow: 0 0 0 0 rgba(0,167,184,0.26);
  }

  to {
    box-shadow: 0 0 0 3px rgba(0,167,184,0.26);
  }
}

.emotion-9 {
  position: relative;
  top: 50%;
  background-position: center;
  background-size: 100% 2px;
  background-repeat: no-repeat;
  height: 2px;
  border-radius: 2px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.emotion-9::before {
  content: '';
  position: absolute;
  height: 6px;
  width: 100%;
  -webkit-transform: translateY(-25%);
  -ms-transform: translateY(-25%);
  transform: translateY(-25%);
}

.emotion-2 {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  height: 100%;
  width: 100%;
  color: #6C7983;
}

.emotion-0 {
  color: #00c1bb;
}

.emotion-6 {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  height: 100%;
  width: 100%;
  color: #00c1bb;
}

.emotion-4 {
  color: #6C7983;
}

.emotion-13 {
  color: #00c1bb;
  top: 50%;
  left: 0;
  position: absolute;
  width: 6px;
  height: 6px;
  margin-top: -3px;
  cursor: default;
  z-index: 2;
}

.emotion-13::before {
  content: '';
  display: block;
  background-color: currentColor;
  width: 6px;
  height: 6px;
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
  border-radius: 50%;
  -webkit-transition: -webkit-transform 0.2s ease-in-out,width 0.2s ease-in-out,height 0.2s ease-in-out;
  -webkit-transition: transform 0.2s ease-in-out,width 0.2s ease-in-out,height 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out,width 0.2s ease-in-out,height 0.2s ease-in-out;
}

.emotion-13:active::before {
  -webkit-transform: scale(3);
  -ms-transform: scale(3);
  transform: scale(3);
  -webkit-transition-delay: 0s;
  transition-delay: 0s;
}

.emotion-13:focus {
  outline: 0;
}

.emotion-13:focus-visible::before {
  -webkit-animation: animation-0 1s infinite alternate ease-in-out;
  animation: animation-0 1s infinite alternate ease-in-out;
}

<InputRange
  name="x"
>
  <x-range
    disabled={false}
    max={100}
    min={0}
    onChange={[Function]}
    step={1}
  >
    <Track
      className="emotion-11 emotion-8"
      disabled={false}
      style={
        Object {
          "zIndex": 0,
        }
      }
    >
      <div
        className="emotion-8 emotion-9 emotion-10"
        disabled={false}
        style={
          Object {
            "zIndex": 0,
          }
        }
      >
        <Segment
          as={[Function]}
          key="2"
          on={true}
        >
          <svg
            className="emotion-2 emotion-3"
            height="100"
            width="100"
            xmlns="http://www.w3.org/2000/svg"
          >
            <Rect
              disabled={false}
              offset={0}
              width={0}
            >
              <rect
                className="emotion-0 emotion-1"
                disabled={false}
                fill="currentColor"
                height={2}
                offset={0}
                rx={1}
                ry={1}
                width={0}
                x={0}
              />
            </Rect>
          </svg>
        </Segment>
        <Segment
          as={[Function]}
          key="3"
        >
          <svg
            className="emotion-6 emotion-3"
            height="100"
            width="100"
            xmlns="http://www.w3.org/2000/svg"
          >
            <Rect
              disabled={true}
              offset={0}
              width={1000}
            >
              <rect
                className="emotion-4 emotion-1"
                disabled={true}
                fill="currentColor"
                height={2}
                offset={0}
                rx={1}
                ry={1}
                width={1000}
                x={0}
              />
            </Rect>
          </svg>
        </Segment>
      </div>
    </Track>
    <div
      style={
        Object {
          "position": "absolute",
          "transform": undefined,
          "zIndex": 1,
        }
      }
    >
      <Handle
        disabled={false}
        index={0}
        name="xundefined"
        readOnly={false}
        style={Object {}}
      >
        <div
          className="emotion-13 emotion-14"
          data-action="drag-handle"
          index={0}
          style={Object {}}
          tabIndex={0}
        >
          <input
            disabled={false}
            name="xundefined"
            readOnly={false}
            type="hidden"
          />
        </div>
      </Handle>
    </div>
  </x-range>
</InputRange>
`;
